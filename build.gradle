plugins {
    id 'java'
    // Eğer shadowJar (veya başka bir paketleme plugini) kullanıyorsan, burada tanımlı olmalı.
    // Örneğin: id("io.github.goooler.shadow") version "8.1.8" // Veya John Rengelman's shadow
}

group = 'com.knemis.skyblock'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "EngineHub"
        url = uri("https://maven.enginehub.org/repo/")
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url = 'https://jitpack.io' }
    maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url = 'https://ci.ender.zone/plugin/repository/everything/' }
    maven {
        name = "essentialsx"
        url = uri("https://repo.essentialsx.net/releases/")
    }
    maven {
        name = "fastasyncworldedit-repo"
        url = "https://maven.fastasyncworldedit.com/repository/maven-public/"
    }
    maven { url = uri("https://nexus.iridiumdevelopment.net/repository/maven-releases/") }
    maven { url = uri("https://repo.codemc.org/repository/maven-public/") }
    maven { url = uri("https://repo.rosewooddev.io/repository/public/") } // RoseStacker için
    maven { url = uri("https://repo.extendedclip.com/content/repositories/placeholderapi/") } // PlaceholderAPI için
    maven { url = uri("https://repo.jeff-media.com/public/") } // SpigotUpdateChecker için
    maven { url = uri("https://repo.bg-software.com/repository/api/") } // WildStackerAPI için
    maven { url = uri("https://moyskleytech.com/debian/m2") } // ObsidianStackerAPI için
}

dependencies {
    // Sunucu API'si
    compileOnly "io.papermc.paper:paper-api:1.21.4-R0.1-SNAPSHOT"

    // Temel Plugin Bağımlılıkları
    compileOnly 'com.fastasyncworldedit:FastAsyncWorldEdit-Bukkit:2.13.0'
    implementation 'com.sk89q.worldguard:worldguard-bukkit:7.0.13'
    compileOnly 'com.sk89q.worldguard:worldguard-core:7.0.13'
    compileOnly("net.luckperms:api:5.5")
    compileOnly('com.github.MilkBowl:VaultAPI:1.7') {
        exclude group: 'org.bukkit', module: 'bukkit'
    }
    compileOnly('net.essentialsx:EssentialsX:2.21.0') {
        exclude group: 'org.spigotmc', module: 'spigot-api'
    }
    compileOnly('net.essentialsx:EssentialsXSpawn:2.21.0') {
        exclude group: 'org.spigotmc', module: 'spigot-api'
    }

    // Annotations ve Lombok
    compileOnly 'org.jetbrains:annotations:26.0.2'
    compileOnly 'org.projectlombok:lombok:1.18.38'
    compileOnly(project(":SkyBlockProjectSecondCore"))
    compileOnly(project(":SkyBlockProjectTeams"))
    annotationProcessor 'org.projectlombok:lombok:1.18.38'
    testCompileOnly 'org.projectlombok:lombok:1.18.38'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.38'

    // XSeries (Senin versiyonunla devam ediyoruz, IridiumCore kodu hata verirse 13.x'e yükseltilebilir)
    implementation 'com.github.cryptomorin:XSeries:9.8.0'

    implementation platform("com.fasterxml.jackson:jackson-bom:2.17.1")
    implementation 'org.apache.commons:commons-text:1.11.0'   // or the latest version

    // If you only need annotations at compile time this is enough:
    implementation "com.fasterxml.jackson.core:jackson-annotations"

    // If you will also serialise/deserialize objects at runtime add databind:
    implementation "com.fasterxml.jackson.core:jackson-databind"

    // Kyori Adventure
    compileOnly "net.kyori:adventure-api:4.17.0"
    compileOnly "net.kyori:adventure-text-serializer-plain:4.17.0"
    compileOnly "net.kyori:adventure-text-serializer-legacy:4.17.0"

    // IridiumCore'dan gelen Authlib
    compileOnly("com.mojang:authlib:1.5.25")

    // IridiumTeams'den gelenler
    implementation("com.j256.ormlite:ormlite-core:6.1")
    implementation("com.j256.ormlite:ormlite-jdbc:6.1")
    compileOnly("me.clip:placeholderapi:2.11.6")

    // İsteğe bağlı olarak belirttiğin ve şimdi eklediğimiz bağımlılıklar:
    // Bu API'ler genellikle sunucuda yüklü olan ana pluginlerle etkileşim kurar.
    // "Yerelde olacak şekilde" ifadesi, bu pluginlerin kendi sunucularına veri göndermesini
    // engellemekse, bu kütüphaneleri kullanırken yapılandırmalarına veya kullanımlarına dikkat etmen gerekir.
    compileOnly("dev.rosewood:rosestacker:1.5.33")           // RoseStacker API
    compileOnly("com.bgsoftware:WildStackerAPI:2025.1")     // WildStacker API
    compileOnly("com.moyskleytech:ObsidianStackerAPI:1.0.0") // ObsidianStacker API
    // compileOnly("net.ess3:EssentialsXSpawn:2.16.1")       // EssentialsXSpawn (EssentialsX bağımlılığın zaten kapsayabilir)

    // SpigotUpdateChecker ve bStats:
    // Bu kütüphaneleri "implementation" olarak eklemek, kodlarını JAR'ınıza dahil eder.
    // Ancak, veri göndermelerini engellemek için plugin'inizin kodunda bunları
    // başlatan kısımları (örn. bStats için `new Metrics(this, pluginId)` gibi)
    // kaldırmanız veya uygun şekilde yapılandırmanız gerekebilir.
    // Eğer bu kütüphanelerin *sadece API'lerini* kullanıp, asıl pluginlerin sunucuda olacağını
    // varsayarsak `compileOnly` daha uygun olurdu, ama "yerelde olacak şekilde" dediğin için
    // kodlarını dahil ettiğimizi varsayarak `implementation` olarak ekliyorum.
    // Eğer sadece API'lerini kullanacaksanız `compileOnly` yapın.
    implementation("de.jeff_media:SpigotUpdateChecker:1.3.2")
    implementation("org.bstats:bstats-bukkit:3.1.0")


    // Test bağımlılıkları
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
    testImplementation 'org.mockito:mockito-core:5.11.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.11.0'

    testImplementation "io.papermc.paper:paper-api:1.21.4-R0.1-SNAPSHOT"
    testImplementation "net.luckperms:api:5.5"
    testImplementation('com.github.MilkBowl:VaultAPI:1.7') {
        exclude group: 'org.bukkit', module: 'bukkit'
    }
    testImplementation 'com.fastasyncworldedit:FastAsyncWorldEdit-Bukkit:2.13.0'
    testImplementation 'com.sk89q.worldguard:worldguard-core:7.0.13'
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

// Eğer shadowJar kullanıyorsan, yapılandırman buraya gelecek.
// Örneğin:
// tasks.jar { enabled = true } // Veya shadowJar kullanıyorsan false
// tasks.register('shadowJar', com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
//    archiveClassifier.set('') // JAR isminden '-all' veya '-shadow' gibi ekleri kaldırır
//    // Kütüphaneleri kendi paket yapınızın altına taşımak (relocate) için:
//    relocate 'org.bstats', 'com.knemis.skyblock.libs.bstats'
//    relocate 'de.jeff_media.updatechecker', 'com.knemis.skyblock.libs.updatechecker'
//    relocate 'com.j256.ormlite', 'com.knemis.skyblock.libs.ormlite'
//    // XSeries zaten implementation, eğer sorun çıkarırsa veya başka pluginle çakışırsa relocate edilebilir.
//    // relocate 'com.github.cryptomorin.xseries', 'com.knemis.skyblock.libs.xseries'
//
//    // Hangi bağımlılıkların JAR'a dahil edileceğini belirleyebilirsiniz
//    // configurations = [project.configurations.runtimeClasspath]
// }
// tasks.build.dependsOn tasks.shadowJar // build görevi çalıştığında shadowJar'ın da çalışmasını sağlar
