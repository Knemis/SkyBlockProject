plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'com.knemis.skyblock'
version = '1.0-SNAPSHOT'

repositories {
    // PaperMC Resmi Reposu
    maven {
        name = 'PaperMC'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }

    // SpigotMC Reposu
    maven {
        name = 'SpigotMC'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }

    // FAWE Resmi Reposu
    maven {
        name = 'FAWE'
        url = 'https://maven.fastasyncworldedit.com/repository/maven-public/'
    }

    // WorldGuard Reposu
    maven {
        name = 'EngineHub'
        url = 'https://maven.enginehub.org/repo/'
    }

    // EssentialsX Reposu
    maven {
        name = 'EssentialsX'
        url = 'https://repo.essentialsx.net/releases/'
    }

    // Vault Reposu (JitPack)
    maven {
        name = 'JitPack'
        url = 'https://jitpack.io'
    }

    // LuckPerms Reposu
    maven {
        name = 'LuckPerms'
        url = 'https://repo.lucko.me/'
    }

    // Sonatype (Diğer bağımlılıklar için)
    maven {
        name = 'Sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
}

dependencies {
    // Paper API (1.21.4)
    compileOnly 'io.papermc.paper:paper-api:1.21.4-R0.1-SNAPSHOT'

    // FastAsyncWorldEdit (1.21.4 uyumlu)
    compileOnly 'com.fastasyncworldedit:FastAsyncWorldEdit-Bukkit:2.13.0'

    // WorldGuard
    implementation 'com.sk89q.worldguard:worldguard-bukkit:7.0.13'
    compileOnly 'com.sk89q.worldguard:worldguard-core:7.0.13'

    // LuckPerms API
    compileOnly 'net.luckperms:api:5.4'

    // Vault API
    compileOnly 'com.github.MilkBowl:VaultAPI:1.7'

    // EssentialsX
    compileOnly 'net.essentialsx:EssentialsX:2.21.0'

    // Adventure API (Modern metin formatı için)
    implementation 'net.kyori:adventure-api:4.14.0'
    implementation 'net.kyori:adventure-text-minimessage:4.14.0'

    // Gson (Modern sürüm)
    implementation 'com.google.code.gson:gson:2.10.1'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.release = 21
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    relocate 'net.kyori', 'com.knemis.skyblock.libs.kyori'
    relocate 'com.google.gson', 'com.knemis.skyblock.libs.gson'
    minimize()
}

configurations.all {
    resolutionStrategy {
        // Çakışan bağımlılıkları çöz
        force 'com.google.guava:guava:31.1-jre'
        force 'org.slf4j:slf4j-api:2.0.7'

        // Aynı modülün farklı sürümlerini reddet
        failOnVersionConflict()

        // Dinamik sürümler için en yenisini al
        preferProjectModules()
    }
}